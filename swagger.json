{
    "swagger": "2.0",
    "info": {
        "version": "1.4.0",
        "title": "Aimedis API",
        "description": "Manage the Api",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:5001",
    "basePath": "/api/v4",
    "tags": [
        {
            "name": "Patientflow",
            "description": "API for patient flow"
        },
        {
            "name": "Questions",
            "description": "API for journal questionare"
        },
        {
            "name": "Answers",
            "description": "API for answers of patient"
        },
        {
            "name": "Hospital_Admin",
            "description": "API for  hospital admin"
        },
        {
            "name": "Virtual_Specialty",
            "description": "API for  specialities"
        },
        {
            "name": "virtual_cases",
            "description": "API for cases"
        },
        {
            "name": "sick",
            "description": "API for cases"
        },
        {
            "name":"Team_Group",
            "description": "API for Team_Group"
        },
        {
            "name":"Video_Conference",
            "description": "API for Video_Conference"
        }, {
            "name": "TrackRecord",
            "description": "API for track the record"
        },
        {
            "name": "User",
            "description": "API for User"
        },
        {
            "name": "Membership",
            "description": "API for Membership"
        },
        {
            "name": "Metadata",
            "description": "API for Metadata"
        },
        {
            "name": "Registration",
            "description": "API for registration"
        },
        {
            "name": "Prescription",
            "description": "API for Prescription"
        },
        {
            "name": "Appointments",
            "description": "API for Appointments"
        },
        {
            "name": "EmergencyRecord",
            "description": "Get Emergency record"
        },
        {
            "name": "DoctorAppointments",
            "description": "Get Emergency record"
        }
        
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
      
        "/hospitaladmin/associatedTo/{user_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "update with given ID",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                        
                    }
                }
            }
            
        },
        "/emergency_record/{UserId}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "UserId",
                    "in": "path",
                    "description": "Id of user"
                }
            ],
            "get": {
                "tags": [
                    "EmergencyRecord"
                ],
                "summary": "Get emergency record",
                "responses": {
                    "200": {
                        "description": "Record record is found"
                    }
                }
            }
        },
        "/User/AddTrack/{UserId}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "UserId",
                    "in": "path",
                    "description": "Id of user"
                }
            ],
            "put": {
                "tags": [
                    "TrackRecord"
                ],
                "parameters": [
                    {
                        "name": "AddTrack",
                        "in": "body",
                        "description": "Add track in User Profile",
                        "schema": {
                            "$ref": "#/definitions/UserTrack"
                        }
                    }
                ],
                "summary": "Update in Track record",
                "responses": {
                    "200": {
                        "description": "Track record is added"
                    }
                }
            },
            "get": {
                "tags": [
                    "TrackRecord"
                ],
                "summary": "Get Track record",
                "responses": {
                    "200": {
                        "description": "Track record is found"
                    }
                }
            }
        },
        "/User/AddTrack/{UserId}/{TrackId}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "UserId",
                    "in": "path",
                    "description": "Id of user"
                },
                {
                    "name": "TrackId",
                    "in": "path",
                    "description": "Id of user"
                }
            ],
            "delete": {
                "tags": [
                    "TrackRecord"
                ],
                "summary": "Delete Track record",
                "responses": {
                    "200": {
                        "description": "Track record is deleted"
                    }
                }
            },
            "put": {
                "tags": [
                    "TrackRecord"
                ],
                "parameters": [
                    {
                        "name": "UpdateTrack",
                        "in": "body",
                        "description": "Update track in User Profile",
                        "schema": {
                            "$ref": "#/definitions/UserTrack"
                        }
                    }
                ],
                "summary": "Add Track record",
                "responses": {
                    "200": {
                        "description": "Track record is updated"
                    }
                }
            }
        },
        "/User/AddTrack/TrackUploadImage": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "UserId",
                    "in": "path",
                    "description": "Id of user"
                },
                {
                    "name": "TrackId",
                    "in": "path",
                    "description": "Id of user"
                }
            ],
            "post": {
                "tags": [
                    "TrackRecord"
                ],
                "consumes": "multipart/form-data",
                "parameters": [
                    {
                        "name": "UploadTrackImage",
                        "in": "formData",
                        "type": "file",
                        "description": "Upload image in Track"
                    }
                ],
                "summary": "Add Track record",
                "responses": {
                    "200": {
                        "description": "Track record is added"
                    }
                }
            }
        },
        "/cases/Discharge/{patient_id}/{admin_id}":{
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "patient_id",
                    "in": "path",
                    "description": "ID",
                    "type": "string"
                },
                {
                    "name": "admin_id",
                    "in": "path",
                    "description": "ID",
                    "type": "string"
                }
                
             ],
           "put": {
                "tags": [
                    "TrackRecord"
                ],
                "parameters": [
                    {
                        "name": "Discharge",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTrack"
                        }
                    }
                ],
                "summary": "Update Discharge Patient with Patient_id and Admin_id",
                "responses": {
                    "200": {
                        "description": "successfully discharge"
                    }
                }
            }
        },
        "/UserProfile/AddUser/": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "UserSave",
                        "in": "body",
                        "description": "Add new User",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary":"Add User",
                "responses": {
                    "200": {
                        "description": "User added succefully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/UserProfile/uploadImage": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "UserId",
                    "in": "path",
                    "description": "Id of user"
                }
            ],
            "post": {
                "tags": [
                    "User"
                ],
                "consumes": "multipart/form-data",
                "parameters": [
                    {
                        "name": "uploadImage",
                        "in": "formData",
                        "type": "file",
                        "description": "Upload image"
                    }
                ],
                "summary": "Add user image",
                "responses": {
                    "200": {
                        "description": "user image is added"
                    }
                }
            }
        },
        "/UserProfile/UserLogin": {
            "post": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Login the User",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "summary": "For Login",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                }
            }
        },
        "/UserProfile/Users/{User_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "User_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User with given ID",
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User with given ID",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User is deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Get User with given ID",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Update the User",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/UserProfile/Membership": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Membership"
                ],
                "parameters": [
                    {
                        "name": "addMembership",
                        "in": "body",
                        "description": "membership",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary":"Add Membership",
                "responses": {
                    "200": {
                        "description": "membership added succefully",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/UserProfile/SickCertificate": {
            "post": {
                "tags": [
                    "SickCertificate"
                ],
                "parameters": [
                    {
                        "name": "addMembership",
                        "in": "body",
                        "description": "membership",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary":"Generate Sick Cretificate",
                "responses": {
                    "200": {
                        "description": "added succefully",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/UserProfile/SickCertificate/{sick_certificate_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "sick_certificate_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "SickCertificate"
                ],
                "summary": "Get with given ID",
                "responses": {
                    "200": {
                        "description": "Certificate found",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete with given ID",
                "tags": [
                    "SickCertificate"
                ],
                "responses": {
                    "200": {
                        "description": "Certificate deleted",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    }
                }
            }
        },
        "/UserProfile/Metadata": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Metadata",
                "responses": {
                    "200": {
                        "description": "Metadata found",
                        "schema": {
                            "$ref": "#/definitions/Metadata"
                        }
                    }
                }
            }
        },
        "/UserProfile/Metadata/{Metadata_id}": {
            "parameters": [
                {
                    "name": "Metadata_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get User with given ID",
                "parameters": [
                    {
                        "name": "Metadata",
                        "in": "body",
                        "description": "Update the Metadata",
                        "schema": {
                            "$ref": "#/definitions/Metadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata",
                        "schema": {
                            "$ref": "#/definitions/Metadata"
                        }
                    }
                }
            }
        },
        "/UserProfile/Membership/{Membership_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "Membership_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get User membership with given ID",
                "responses": {
                    "200": {
                        "description": "User membership found",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User membership with given ID",
                "tags": [
                    "Membership"
                ],
                "responses": {
                    "200": {
                        "description": "User membership is deleted",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get User membership with given ID",
                "parameters": [
                    {
                        "name": "Membership",
                        "in": "body",
                        "description": "Update the User membership",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User membership is found",
                        "schema": {
                            "$ref": "#/definitions/Membership"
                        }
                    }
                }
            }
        },
        "/UserProfile/Rigt_management": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "put": {
                "tags": [
                    "Rigt_management"
                ],
                "summary": "Update user risk management",
                "parameters": [
                    {
                        "name": "Rigt_management",
                        "in": "body",
                        "description": "Update the User Risk management",
                        "schema": {
                            "$ref": "#/definitions/Rigt_management"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/Rigt_management"
                        }
                    }
                }
            }
        },
        "/UserProfile/Registration/": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "parameters": [
                    {
                        "name": "registration",
                        "in": "body",
                        "description": "Add new User",
                        "schema": {
                            "$ref": "#/definitions/Registration"
                        }
                    }
                ],
                "summary":"For Registration",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User added succefully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/UserProfile/Prescription/": {
            "post": {
                "tags": [
                    "Prescription"
                ],
                "parameters": [
                    {
                        "name": "Prescription",
                        "in": "body",
                        "description": "Add Prescription",
                        "schema": {
                            "$ref": "#/definitions/Prescription"
                        }
                    }
                ],
                "summary":"Add Prescription",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Prescription added succefully",
                        "schema": {
                            "$ref": "#/definitions/Prescription"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/UserProfile/GetPrescription/": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "get prescription(doctor)"
                }
            ],
            "get": {
                "tags": [
                    "Doctor Prescription"
                ],
                "summary": "Get with given ID",
                "responses": {
                    "200": {
                        "description": "Prescription found",
                        "schema": {
                            "$ref": "#/definitions/GetPrescription"
                        }
                    }
                }
            }
        },
        "/UserProfile/GetPrescription/{Prescription_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "get prescription(doctor)"
                },
                {
                    "name": "Prescription_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Doctor Prescription"
                ],
                "parameters": [
                    {
                        "name": "addstatus",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetPrescription"
                        }
                    }
                ],
                "summary": "saved",
                "responses": {
                    "200": {
                        "description": "saved"
                    }
                }
            }
        },
        "/UserProfile/GetSickCertificate/": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "get prescription(doctor)"
                }
            ],
            "get": {
                "tags": [
                    "Doctor Sick Certificate"
                ],
                "summary": "Get with given ID",
                "responses": {
                    "200": {
                        "description": "Certificate found"
                    }
                }
            }
        },
        "/UserProfile/Mypatients/": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "get all my patients"
                }
            ],
            "get": {
                "tags": [
                    "My patients"
                ],
                "summary": "Get with given ID",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/UserProfile/GetSickCertificate/{sick_certificate_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "get prescription(doctor)"
                },
                {
                    "name": "sick_certificate_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Doctor Sick Certificate"
                ],
                "parameters": [
                    {
                        "name": "addstatus",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    }
                ],
                "summary": "saved",
                "responses": {
                    "200": {
                        "description": "saved"
                    }
                }
            }
        },
        "/UserProfile/Prescription/{Prescription_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "Prescription_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Prescription"
                ],
                "summary": "Get with given ID",
                "responses": {
                    "200": {
                        "description": "Prescription found",
                        "schema": {
                            "$ref": "#/definitions/Prescription"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete with given ID",
                "tags": [
                    "Prescription"
                ],
                "responses": {
                    "200": {
                        "description": "Prescription deleted",
                        "schema": {
                            "$ref": "#/definitions/SickCertificate"
                        }
                    }
                }
            }
        },
        "/UserProfile/Appointments/{Appointments_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "Appointments_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Appointments"
                ],
                "parameters": [
                    {
                        "name": "Appointments",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Appointments"
                        }
                    }
                ],
                "summary": "saved",
                "responses": {
                    "200": {
                        "description": "saved"
                    }
                }
            }
        },
        "/UserProfile/Appointments/doctorAppointments": {
            "post": {
                "tags": [
                    "DoctorAppointments"
                ],
                "parameters": [
                    {
                        "name": "DoctorAppointments",
                        "in": "body",
                        "description": "Add Doctor Appointments",
                        "schema": {
                            "$ref": "#/definitions/DoctorAppointments"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary":"Add appointment",
                "responses": {
                    "200": {
                        "description": "Doctor Appointments added succefully",
                        "schema": {
                            "$ref": "#/definitions/DoctorAppointments"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },

        "/step/GetStep/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "description": "Id of house"
                }
            ],
            "get": {
                "tags": [
                    "Patientflow"
                ],
                "summary": "Get information from house_id ",
                "responses": {
                    "200": {
                        "description": "information is found"
                    }
                }
            }
        },
        "/questionaire/GetQuestionaire/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get questionaire from house_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "questionaire is found"
                    }
                }
            }
        },
        "/questionaire/GetAnswerspatient/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Answers"
                ],
                "summary": "Get Answers from house_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Answers is found"
                    }
                }
            }
        },
        "/hospitaladmin/institute/{institute_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "institute_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Get institute from institute_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "institute is found"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "name": "UpdateInstitute",
                        "in": "body",
                        "description": "update the institute",
                        "schema": {
                            "$ref": "#/definitions/Institute"
                        }
                    }
                ],
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Update Institute with Given Institute_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/hospitaladmin/GetProfessional/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Get professional info from house_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "info is found"
                    }
                }
            }
        },
        "/vh/AddSpecialty/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get specialities from house_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " specialities is found"
                    }
                }
            }
        },
        "/vh/GetAllTask/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get task from house_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "task is found"
                    }
                }
            }
        },
        "/vh/AddTask/{task_ids}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "task_ids",
                    "in": "path",
                    "required": true,
                    "description": "Id of task",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get task from task_id ",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " task is found"
                    }
                }
            }
        },
        "/vh/PatientsTask/{patient_profile_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "patient_profile_id",
                    "in": "path",
                    "required": true,
                    "description": "patient_profile_id",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get task from patient_profile_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " task is found"
                    }
                }
            }
        },
        "/vh/ProfessionalTask/{patient_profile_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "patient_profile_id",
                    "in": "path",
                    "required": true,
                    "description": "patient_profile_id",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get task from patient_profile_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " task is found"
                    }
                }
            }
        },
        "/vh/GetService/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get service from house",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " service is found"
                    }
                }
            }
        },
        "/vh/infoOfHouses": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get info of  house",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " info is found"
                    }
                }
            }
        },
        "/vh/AddInvoice/{house_id}/{status}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                },
                {
                    "name": "status",
                    "in": "path",
                    "required": true,
                    "description": "status of invoice ",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get invoice from house",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " invoice is found"
                    }
                }
            }
        },
        "/vh/getPatientFromVH/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get patient from house",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Case number is assigned"
                    }
                }
            }
        },
        "/vh/GetAllArchivedTask/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of house",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "summary": "Get All archived task from house",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Info is found"
                    }
                }
            }
        },
        "/step/AddStep": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Patientflow"
                ],
                "parameters": [
                    {
                        "name": "AddStep",
                        "in": "body",
                        "description": "patientflow",
                        "schema": {
                            "$ref": "#/definitions/Addstep"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Step From Patient flow",
                "responses": {
                    "200": {
                        "description": "step added succefully",
                        "schema": {
                            "$ref": "#/definitions/Addstep"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/questionaire/AddQuestionaire": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Questions"
                ],
                "parameters": [
                    {
                        "name": "AddQuestionaire",
                        "in": "body",
                        "description": "Questions",
                        "schema": {
                            "$ref": "#/definitions/AddQuestionaire"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a questionnaire at the patient end with House Id (please add an option with a form of the array)",
                "responses": {
                    "200": {
                        "description": " added successfully",
                        "schema": {
                            "$ref": "#/definitions/AddQuestionaire"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/questionaire/AddAnswerspatient": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Answers"
                ],
                "parameters": [
                    {
                        "name": "AddAnswerspatient",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AddAnswerspatient"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Answer at Patient End",
                "responses": {
                    "200": {
                        "description": " added successfully",
                        "schema": {
                            "$ref": "#/definitions/AddAnswerspatient"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/AddSpecialty": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "AddSpecialty",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/AddSpecialty"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Speciality From House",
                "responses": {
                    "200": {
                        "description": "Added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/AddTask": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "AddTask",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/AddTask"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Task from House",
                "responses": {
                    "200": {
                        "description": " added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/ProfessionalTaskComment/{task_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "description": "Task Id"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "ProfessionalTaskComment",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/ProfessionalTaskComment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Professional Task Comment With task_id",
                "responses": {
                    "200": {
                        "description": "comment added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/AddService": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "AddService",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/AddService"
                        }
                    }
                ],
                "summary": "Add Service From House",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/AddInvoice": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "AddInvoice",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/AddInvoice"
                        }
                    }
                ],
                "summary": "Add Invoice From House",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/checkPatient": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "checkPatient",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/checkPatient"
                        }
                    }
                ],
                "summary": " Check Patient with patient_id, pin, institute_id, email",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": " information get successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/checkPatient1": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "checkPatient",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/checkPatient1"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check Patient with patient_id, pin, email,  First_name, Last_ name",
                "responses": {
                    "200": {
                        "description": " information get successfully"
                        
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vh/addPatientToVH": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "addPatientToVH",
                        "in": "body",
                        "description": "Virtual_Specialty",
                        "schema": {
                            "$ref": "#/definitions/addPatientToVH"
                        }
                    }
                ],
                "summary": "Add Patient To Patient Flow",
                "Produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "case number successfully assigned "
                        
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/step/AddStep/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Patientflow"
                ],
                "parameters": [
                    {
                        "name": "Patientflow",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Addstep"
                        }
                    }
                ],
                "summary": "Update with given ID",
                "responses": {
                    "200": {
                        "description": "step updated"
                    }
                }
            }
        },
        "/vh/AddSpecialty/{specialty_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "specialty_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Speciality with Speciality_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "specialty is deleted",
                        "schema": {
                            "$ref": "#/definitions/AddSpecialty"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddSpecialty"
                        }
                    }
                ],
                "summary": "Update Speciality with Speciality_id",
                "responses": {
                    "200": {
                        "description": "specialty updated"
                    }
                }
            }
        },
        "/vh/AddTask/{task_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Task with Task_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "task is deleted"
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddTask"
                        }
                    }
                ],
                "summary": "Add Task with Task_id",
                "responses": {
                    "200": {
                        "description": "task is updated"
                    }
                }
            }
        },
        "/vh/AddInvoice/{bill_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "bill_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Invoice with Bill_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "Invoice is deleted",
                        "schema": {
                            "$ref": "#/definitions/AddInvoice"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddInvoice"
                        }
                    }
                ],
                "summary": "Add Invoice with Bill_id",
                "responses": {
                    "200": {
                        "description": "Invoice is updated"
                    }
                }
            }
        },
        "/vh/addPatientToVH/{case_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "case_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Patient with Case_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "case is deleted",
                        "schema": {
                            "$ref": "#/definitions/addPatientToVH"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/addPatientToVH"
                        }
                    }
                ],
                "summary": " Add Patient with Case_id",
                "responses": {
                    "200": {
                        "description": "Case is updated"
                    }
                }
            }
        },
        "/questionaire/Answer/{answerspatient_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "answerspatient_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete with given ID",
                "tags": [
                    "Answers"
                ],
                "responses": {
                    "200": {
                        "description": "Delete Answer with Given Id"
                    }
                }
            },
            "put": {
                "tags": [
                    "Answers"
                ],
                "parameters": [
                    {
                        "name": "Answers",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddAnswerspatient"
                        }
                    }
                ],
                "summary": "Update Answer with Given Id",
                "responses": {
                    "200": {
                        "description": "answerspatient is updated"
                    }
                }
            }
        },
        "/questionaire/Question/{questionaire_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "questionaire_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Questions"
                ],
                "parameters": [
                    {
                        "name": "Questions",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddQuestionaire"
                        }
                    }
                ],
                "summary": "Update Questionaire with Given Id",
                "responses": {
                    "200": {
                        "description": "questionaire is updated"
                    }
                }
            }
        },
        "/vh/ProfessionalTaskComment/{task_id}/{comment_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                },
                {
                    "name": "comment_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Professional Task Comment  with Task_id and Comment_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "comment is deleted"
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProfessionalTaskComment"
                        }
                    }
                ],
                "summary": " Add Professional Task Comment  with Task_id and Comment_id",
                "responses": {
                    "200": {
                        "description": "comment is updated"
                    }
                }
            }
        },
        "/vh/AddService/{service_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "service_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete Service  with Task_id and Service_id",
                "tags": [
                    "Virtual_Specialty"
                ],
                "responses": {
                    "200": {
                        "description": "Service is Deleted Successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Virtual_Specialty"
                ],
                "parameters": [
                    {
                        "name": "Virtual_Specialty",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddService"
                        }
                    }
                ],
                "summary": "Add Service  with Task_id and Service_id",
                "responses": {
                    "200": {
                        "description": "service is update"
                    }
                }
            }
        },
        "/hospitaladmin/AddGroup/{institute_id}/{group_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "institute_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                },
                {
                    "name": "group_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "delete": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Delete Institute Group with Given Institute _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "name": "AddtheGroup",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AddtheGroup"
                        }
                    }
                ],
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Update Institute Group with Given Institute _id and Group_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/hospitaladmin/associatedTo/{user_id}/{institute_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of user",
                    "type": "string"
                },
                {
                    "name": "institute_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "delete": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": " Delete  Associate User with Given Institute _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully"
                    }
                }
            }
        },
        "/hospitaladmin/assignedHouse/{user_id}/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "delete": {
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": " Delete  Assigned Hospital  with Given House _id and User_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully"
                    }
                }
            }
        },
        "/hospitaladmin/AddGroup/{institute_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "institute_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "put": {
                "parameters": [
                    {
                        "name": "AddtheGroup",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AddtheGroup"
                        }
                    }
                ],
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": " Update Institute Group with Given Institute _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/hospitaladmin/assignedHouse/{user_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "description": "Id of institute",
                    "type": "string"
                }
            ],
            "put": {
                "parameters": [
                    {
                        "name": "AssignedHouse",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AssignedHouse"
                        }
                    }
                ],
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Update  Assigned Hospital  with Given User _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/hospitaladmin/associatedTo/{userid}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "userid",
                    "in": "path",
                    "required": true,
                    "description": "Id of user",
                    "type": "string"
                }
            ],
            "put": {
                "parameters": [
                    {
                        "name": "associatedTo",
                        "in": "body",
                        "description": "Already associated with the institute"
                    }
                ],
                "tags": [
                    "Hospital_Admin"
                ],
                "summary": "Update  Associate User with Given User _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/cases/AddRoom/{Case_Id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "Case_Id",
                    "in": "path",
                    "required": true,
                    "description": "Id of Case",
                    "type": "string"
                }
            ],
            "put": {
                "parameters": [
                    {
                        "name": "virtual_cases",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AddRoom"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Add Room with Case_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            }
        },
        "/cases/AddCase/{speciality_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "speciality_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "parameters": [
                    {
                        "name": "virtual_cases",
                        "in": "body",
                        "description": "Answers",
                        "schema": {
                            "$ref": "#/definitions/AddRoom"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Add Case with Speciality_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "updated successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get information from speciality_id ",
                "responses": {
                    "200": {
                        "description": "information is found"
                    }
                }
            }
        },
        "/cases/AddCase": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "virtual_cases"
                ],
                "parameters": [
                    {
                        "name": "AddCase",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddRoom"
                        }
                    }
                ],
                "summary": "Add Case with case_number, speciality, patient, house_id, wards, room, bed, hospital",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/cases/checkbedAvailability": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "virtual_cases"
                ],
                "parameters": [
                    {
                        "name": "checkbedAvailability",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddRoom"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check Bed availability   with case_number, speciality, patient, house_id, wards, room, bed, hospital",
                "responses": {
                    "200": {
                        "description": "added successfully",
                        "schema": {
                            "$ref": "#/definitions/AddRoom"
                        }
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/cases/checkbedAvailabilityByWard": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "virtual_cases"
                ],
                "parameters": [
                    {
                        "name": "checkbedAvailabilityByWard",
                        "in": "body",
                        "description": "checkbedAvailabilityByWard",
                        "schema": {
                            "$ref": "#/definitions/Checkward"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check Bed Availability with ward_id, specialty_id,  house_id",
                "responses": {
                    "200": {
                        "description": "added successfully"
                    },
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/cases/GetInfo/{house_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "description": "Id of house"
                }
            ],
            "get": {
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get information from house_id ",
                "responses": {
                    "200": {
                        "description": "information is found"
                    }
                }
            }
        },
        "/vh/getAppointTask/{House_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "House_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get appointment Task using House_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/cases/patient/{patient_id}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "patient_id",
                    "in": "path",
                    "description": "Id of patient"
                }
            ],
            "get": {
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get information from patient_id ",
                "responses": {
                    "200": {
                        "description": "information is found"
                    }
                }
            }
        },
        "/vh/stasticsrightinfo/{House_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "House_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get Statistics right Info using House_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/statisticstopinfo/{House_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "House_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get Statistics Top Info using House_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },

        "/vh/getAppointTask1/{House_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "House_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Get Appointment Task Using House_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },

        "/vh/sortinfo/{patient_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],

                "tags": [
                    "virtual_cases"
                ],
                "summary": "using patient_id get data in decending order",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/BedAvability/{specialty_id}/{ward_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "specialty_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "ward_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "using special_id and ward_id  get room availability",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/downloadInvoicePdf": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "downloadinvoice",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/download"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Download the Invoice in PDF form",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Download PDF"
                    }
                }
            }
        },
        "/allHospitalusers/{institute_id}/{type}/{pagenumber}": {
            "get": {
                "parameters": [
                    {
                        "name": "institute_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "description": "type",
                        "type": "string"
                    },
                    {
                        "name": "pagenumber",
                        "in": "path",
                        "required": true,
                        "description": "pagenumber",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "get allhospitaluser by institute_id,type,pagenumber",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/allHospitalusers": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "get": {
                "parameters": [
                    {
                        "name": "downloadinvoice",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/search"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "get allhospitaluser by institute_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/patientjourneyQue/{patient_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "using patient_id get questionairs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/patientjourney/{patient_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "JWT token User"
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "using patient_id get questionairs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/TaskFilter": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "filtertask",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/filtertask"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "taskfilter",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/CalenderFilter": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "Calenderfilter",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Calenderfilter"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "calenderfilter",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/AddTrack": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "delete": {
                "parameters": [
                    {
                        "name": "Addtrack",
                        "in": "body",
                        "description": "Update",
                        "schema": {
                            "$ref": "#/definitions/AddTrack"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "AddTrack",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Update in data"
                    }
                }
            }
        },
        "/vh/billfilter": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "Billfilter",
                        "in": "body",
                        "description": "get bill",
                        "schema": {
                            "$ref": "#/definitions/Billfilter"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "calenderfilter",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/LeftInfoPatient": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "LeftInfoPatient",
                        "in": "body",
                        "description": "get details",
                        "schema": {
                            "$ref": "#/definitions/PatientInfo"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Info Patient",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/admin/allHospitalusers": {
            "parameters": [
                {
                    "name": "token",
                  "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "HospitalUsers",
                        "in": "body",
                        "description": "get details",
                        "schema": {
                            "$ref": "#/definitions/adminhostipal"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Infomation",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vh/downloadInvoice2Pdf": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "downloadinvoice",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/download2"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Api for  Download",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Download PDF"
                    }
                }
            }
        },
        "/vh/deletehouse": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "deletehouse",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/deletehouse"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Api for  Deleting houses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Deletehouse"
                    }
                }
            }
        },
        "/vh/setCasenotInhospital": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "set case",
                        "in": "body",
                        "description": "set case",
                        "schema": {
                            "$ref": "#/definitions/setcase"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "Api for editing inhospital",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Update"
                    }
                }
            }
        },
        "/vh/getSubmitQuestionnaire": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "getSubmitQuestionnaire",
                        "in": "body",
                        "description": "Get submit questionaire",
                        "schema": {
                            "$ref": "#/definitions/info1"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "get submit questionaire with house id and patient id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/UserProfile/AddNewUser": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "getSubmitQuestionnaire",
                        "in": "body",
                        "description": "Get submit questionaire",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "tags": [
                    "virtual_cases"
                ],
                "summary": "get submit questionaire with house id and patient id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vactive/SelectDocforSickleave": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "get": {
                "tags": [
                    "sick"
                ],
                "summary": "get slot",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vactive/PatientTask/{profile_id}": {
            "get": {
                    "parameters": [
                        {
                            "name": "profile_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "sick"
                ],
                "summary": "get patienttask",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        
        "/vactive/AddMeeting/{meeting_id}": {
            "delete": {
                    "parameters": [
                        {
                            "name": "meeting_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "sick"
                ],
                "summary": "Delete meeting",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vactive/GetAllPatientData/{patient_id}": {
            "get": {
                    "parameters": [
                        {
                            "name": "patient_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "sick"
                ],
                "summary": "Get all patient",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Data"
                    }
                }
            }
        },
        "/vactive/AddMeeting": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User",
                    "schema": {
                           
                    }
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "ADD",
                        "in": "body",
                        "description": "Add meeting",
                        "schema": {
                            "$ref": "#/definitions/Addmeeting"
                           
                        }
                    }
                ],

                "tags": [
                    "sick"
                ],
                "summary": "Add meeting",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    }
                }
            }
        },
        "/vactive/approvedrequest": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "ADD",
                        "in": "body",
                        "description": "Approval Request",
                        "schema": {
                            "$ref": "#/definitions/approvedrequest"
                           
                        }
                    }
                ],

                "tags": [
                    "sick"
                ],
                "summary": "Approval Request",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    }
                }
            }
        },
        "/vactive/SelectDocforSickleave2": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "ADD",
                        "in": "body",
                        "description": "Booked Slot",
                        "schema": {
                            "$ref": "#/definitions/SelectDocforSickleave2"
                           
                        }
                    }
                ],

                "tags": [
                    "sick"
                ],
                "summary": "Booked Slot",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    }
                }
            }
        },

        "/vactive/DoctorMail": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "ADD",
                        "in": "body",
                        "description": "Mail to Doctor",
                        "schema": {
                            "$ref": "#/definitions/DoctorMail"
                           
                        }
                    }
                ],

                "tags": [
                    "sick"
                ],
                "summary": "Mail to doctor",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    }
                }
            }
        },
        "/teammember/AddTeam/{house_id}":{
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "required": true,
                    "description": "ID",
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Team_Group"
                ],
                "parameters": [
                    {
                        "name": "Team_Group",
                        "in": "body",
                        "description": "Team_Group",
                        "schema": {
                            "$ref": "#/definitions/Team_Group"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get doctor list",
                "responses": {
                    "200": {
                        "description": "Team Group"
                    },               
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/teammember/UpdateTeam/{house_id}/{team_name}":{
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                },
                {
                    "name": "house_id",
                    "in": "path",
                    "description": "ID",
                    "type": "string"
                },
                {
                    "name": "team_name",
                    "in": "path",
                    "description": "Team_Name",
                    "type": "string"
                }
                
             ],
           "put": {
                "tags": [
                    "Team_Group"
                ],
                "parameters": [
                    {
                        "name": "Update",
                        "in": "body",
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Team_Group"
                        }
                    }
                ],
                "summary": "update with given Id",
                "responses": {
                    "200": {
                        "description": "successfully update"
                    }
                }
            }
        },
        "/teammember/DeleteTeam/{house_id}/{staff_id}": {
            "delete": {
                    "parameters": [
                        {
                        "name": "staff_id",
                        "in": "path",
                        "required": true,
                        "description": "ID",
                        "type": "string"
                        },
                        {
                            "name": "house_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"                          
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],
                "tags": [
                    "Team_Group"
                ],
                "summary": "Delete Team",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Delete Team"
                       
                    }
                }
            }
        },
        "/vchat/Get_Doctor": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "Doctor",
                        "in": "body",
                        "description": "Video_Conference",
                        "schema": {
                            "$ref": "#/definitions/getuser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get All Doctor list from AIS Care",
                "responses": {
                    "200": {
                        "description": "Get Doctor"
                    },               
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vchat/getuserchat": {
            
                    "parameters": [
                        {
                            "name": "_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],
                    "post": {
                "tags": [
                    "Video_Conference"
                ],
                "summary": "Check User Chat with USER_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get User"
                    }
                }
            }
        },
        "/vchat/AddVideoUserAccount": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "User_Registration",
                        "in": "body",
                        "description": "Video_Conference",
                        "schema": {
                            "$ref": "#/definitions/VideoConference"
                        }
                    }
                ],
                "summary": "Add Registration For Video Conference",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    },               
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vchat/UsernameLogin": {
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "videouser",
                        "in": "body",
                        "description": "Login for VideoUser",
                        "schema": {
                            "$ref": "#/definitions/VideoLogin"
                        }
                    }
                ],
                "summary": "Login with User name and password for  Video Conference",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/vchat/AppointmentBook": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "addappointment",
                        "in": "body",
                        "description": "addappointment",
                        "schema": {
                            "$ref": "#/definitions/addappointment"
                        }
                    }
                ],
                "summary": "Book Appointment for Video Conference",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    },               
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vchat/GetConferencePatient/{patient_id}": {
            "get": {
                    "parameters": [
                        {
                            "name": "patient_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "Video_Conference"
                ],
                "summary": "Get Conference patient with Patient_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Patient"
                    }
                }
            }
        },
        "/vchat/givefeedback": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User"
                }
            ],
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "Give_Feedback",
                        "in": "body",
                        "description": "Video_Conference",
                        "schema": {
                            "$ref": "#/definitions/givefeedback"
                        }
                    }
                ],
                "summary": "Give FeedBack to doctor",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Add Data"
                    },               
                    "500": {
                        "description": "Something happened wrong"
                    }
                }
            }
        },
        "/vchat/getfeedbackfordoctor/{doctor_id}": {
            "get": {
                    "parameters": [
                        {
                            "name": "doctor_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "Video_Conference"
                ],
                "summary": "Give FeedBack to doctor with doctor_id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get Doctor"
                    }
                }
            }
        },
        "/vchat/managePrepaid": {
            "post": {
                "tags": [
                    "Video_Conference"
                ],
                "parameters": [
                    {
                        "name": "ManagePrepaid",
                        "in": "body",
                        "description": "Prepaid Manage",
                        "schema": {
                            "$ref": "#/definitions/Vprepaid"
                        }
                    }
                ],
                "summary": "Manage Prepaid for topup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Vprepaid"
                        }
                    }
                }
            }
        },
        "/vchat/userdelete/{_id}": {
            "delete": {
                    "parameters": [
                        {
                        "name": "Delete Video User",
                        "in": "body",
                        "description": "Delete User",
                        "schema": {
                            "$ref": "#/definitions/VideoLogin"
                        }
                        },
                        {
                            "name": "_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"                          
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],
                "tags": [
                    "Video_Conference"
                ],
                "summary": "Delete User with _id",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Delete Video User"
                       
                    }
                }
            }
        
        },
        "/vchat/getSlotTime": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User",
                    "schema": {
                           
                    }
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "Get TimeSlot",
                        "in": "body",
                        "description": "TimeSlot",
                        "schema": {
                            "$ref": "#/definitions/Timeslot"
                           
                        }
                    }
                ],

                "tags": [
                    "Video_Conference"
                ],
                "summary": "Get slots for Video Conference",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "TimeSlot"
                    }
                }
            }
        }, "/vchat/DynamicSlots": {
            "parameters": [
                {
                    "name": "token",
                    "in": "header",
                    "description": "JWT token User",
                    "schema": {
                           
                    }
                }
            ],
            "post": {
                "parameters": [
                    {
                        "name": "Get DynamicSlot",
                        "in": "body",
                        "description": "DynamicSlot",
                        "schema": {
                            "$ref": "#/definitions/Dynamicslot"
                           
                        }
                    }
                ],

                "tags": [
                    "Video_Conference"
                ],
                "summary": "Patient  booked slot dynamically",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "DynamicSlot"
                    }
                }
            }
        },
        "/vchat/GetVideoTask/{patient_id}": {
            "get": {
                    "parameters": [
                        {
                            "name": "patient_id",
                            "in": "path",
                            "required": true,
                            "description": "ID",
                            "type": "string"
                        },
                        {
                            "name": "token",
                            "in": "header",
                            "description": "JWT token User"
                        }
                    ],

                "tags": [
                    "Video_Conference"
                ],
                "summary": "Get all Task for Video Conference",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Patient  booked slot dynamically"
                    }
                }
            }
        }
    },
    "definitions": {
        "AddAnswerspatient": {
            "required": [
                "question_id",
                "answers",
                "house_id",
                "Patient_id"
            ],
            "properties": {
                "questionaire_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": false
                },
                "patient": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_logo": {
                    "type": "string",
                    "uniqueItems": false
                },
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Timeslot":{
            "required": [
                
            ],
            "properties": {
                "doctor_id":{
                        "type": "string",
                        "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                  }
              }
           
       },
       "Dynamicslot":{
        "required": [
                
        ],
        "properties": {
            "_id":{
                "type": "string",
                "uniqueItems": false
        }
        }
    },
        "User": {
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "uniqueItems": false
                },
                "parent_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "first_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "last_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "nick_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "title_degreeData": {
                    "type": "string",
                    "uniqueItems": false
                },
                "sex": {
                    "type": "string",
                    "uniqueItems": false
                },
                "birthday": {
                    "type": "string",
                    "uniqueItems": false
                },
                "language": {},
                "street": {
                    "type": "string",
                    "uniqueItems": false
                },
                "no": {
                    "type": "string",
                    "uniqueItems": false
                },
                "zip": {
                    "type": "string",
                    "uniqueItems": false
                },
                "city": {
                    "type": "string",
                    "uniqueItems": false
                },
                "area": {
                    "type": "string",
                    "uniqueItems": false
                },
                "country": {
                    "type": "string",
                    "uniqueItems": false
                },
                "address": {
                    "type": "string",
                    "uniqueItems": false
                },
                "speciality": {},
                "subspeciality": {},
                "phone": {
                    "type": "string",
                    "uniqueItems": false
                },
                "mobile": {
                    "type": "string",
                    "uniqueItems": false
                },
                "fax": {
                    "type": "string",
                    "uniqueItems": false
                },
                "website": {
                    "type": "string",
                    "uniqueItems": false
                },
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "password": {
                    "type": "string",
                    "uniqueItems": false
                },
                "we_offer": {},
                "image": {
                    "type": "string",
                    "uniqueItems": false
                },
                "insurance": {},
                "family_doc": {},
                "aimedis_doc": {},
                "marital_status": {
                    "type": "string",
                    "uniqueItems": false
                },
                "emergency_contact_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "emergency_number": {
                    "type": "string",
                    "uniqueItems": false
                },
                "emergency_email": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "UserTrack": {
            "required": [
                "track_type"
            ],
            "properties": {
                "track_type": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Login": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "password": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Membership": {
            "required": [
                "user_type",
                "user_id",
                "period"
            ],
            "properties": {
                "period_day": {
                    "type": "string",
                    "uniqueItems": false
                },
                "is_reccuring": {
                    "type": "string",
                    "uniqueItems": false
                },
                "status": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Metadata": {
            "required": [],
            "properties": {
                "gender": {
                    "type": "object",
                    "uniqueItems": false
                },
                "languages": {
                    "type": "object",
                    "uniqueItems": false
                },
                "speciality": {
                    "type": "object",
                    "uniqueItems": false
                },
                "title_degreeData": {
                    "type": "object",
                    "uniqueItems": false
                },
                "subspeciality": {
                    "type": "object",
                    "uniqueItems": false
                }
            }
        },
        "Rigt_management": {
            "required": [],
            "properties": {
                "activated_general_right": {
                    "type": "string",
                    "uniqueItems": false
                },
                "who_else_other_than_me": {
                    "type": "object",
                    "uniqueItems": false
                },
                "who_else_other_than_me_newEntries": {
                    "type": "object",
                    "uniqueItems": false
                },
                "emergency_access_to_files": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Registration": {
            "required": [ ],
            "properties": {
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "password": {
                    "type": "string",
                    "uniqueItems": false
                },
                "type": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Prescription": {
            "required": [],
            "properties": {
                "patient_id" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "doctor_id" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "first_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "last_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "birthday" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "status" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "malignant_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "follow_up_prescription" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "musculosceletal_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "substance" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "eye_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "dose" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "infectious_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "trade_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "medication" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "atc_code" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "manufacturer" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "pack_size" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "allergies" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "pulmonary_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "renal_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "endrinologic_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "hypertension" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "diabetes" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "thyroid_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "annotations" : {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "SickCertificate": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "doctor_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "doctor_type": {
                    "type": "string",
                    "uniqueItems": false
                },
                "status": {
                    "type": "string",
                    "uniqueItems": false
                },
                "country": {
                    "type": "string",
                    "uniqueItems": false
                },
                "how_are_you": {
                    "type": "string",
                    "uniqueItems": false
                },
                "fever": {
                    "type": "string",
                    "uniqueItems": false
                },
                "which_symptomps": {
                    "type": "string",
                    "uniqueItems": false
                },
                "since_when": {
                    "type": "string",
                    "uniqueItems": false
                },
                "which_symptomp_first": {
                    "type": "string",
                    "uniqueItems": false
                },
                "time_unable_work": {
                    "type": "string",
                    "uniqueItems": false
                },
                "same_problem_before": {
                    "type": "string",
                    "uniqueItems": false
                },
                "known_diseases": {
                    "type": "string",
                    "uniqueItems": false
                },
                "medication": {
                    "type": "string",
                    "uniqueItems": false
                },
                "allergies": {
                    "type": "string",
                    "uniqueItems": false
                },
                "professions": {
                    "type": "string",
                    "uniqueItems": false
                },
                "annotations": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Appointments": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "doctor_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                },
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "annotations": {
                    "type": "string",
                    "uniqueItems": false
                },
                "insurance": {
                    "type": "string",
                    "uniqueItems": false
                },
                "insurance_number": {
                    "type": "string",
                    "uniqueItems": false
                },
                "pin": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "DoctorAppointments":{
            "properties":{
                "monday" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "tuesday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "wednesday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "thursday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "friday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "saturday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "sunday" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "timeslots" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "breakslots" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "holidays" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "appointment_days" :{
                    "type": "string",
                    "uniqueItems": false
                },
                "remainder_email_days" :{
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "GetPrescription": {
            "required": [],
            "properties": {
                "patient_id" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "doctor_id" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "first_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "last_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "birthday" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "status" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "malignant_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "follow_up_prescription" : {
                    "type": "string",
                    "uniqueItems": false
                },
                "musculosceletal_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "substance" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "eye_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "dose" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "infectious_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "trade_name" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "medication" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "atc_code" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "manufacturer" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "pack_size" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "allergies" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "pulmonary_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "renal_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "endrinologic_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "hypertension" : {
                    "type": "string",
                    "uniqueItems": false
                },
            
                "diabetes" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "thyroid_diseases" : {
                    "type": "string",
                    "uniqueItems": false
                },
                
                "annotations" : {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "setcase": {
            "required": [
                "case_id"
            ],
            "properties": {

                "case_id": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": false
                }
            }
        },
        "addappointment": {       
            "properties": {
                "patient_id":{
                    "type":"string",
                    "uniqueItems": false
                },
                "Speciality":{
                    "type":"string",
                    "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                },
                "start_time":{
                    "type":"string",
                    "uniqueItems": false
                },
                "end_time":{
                    "type":"string",
                    "uniqueItems": false
                },
                "status":{
                    "type":"string",
                    "uniqueItems": false
                },
            
                "payment_type" :{
                    "type": "string",
                    "uniqueItems": false
                 },
                 "total_amount" :{
                    "type": "string",
                    "uniqueItems": false
                 },
                 "created_at": {
                    "type": "string",
                    "uniqueItems": false
                  }
            }
        },
        "VideoConference": {
            "required": [
                "username",
                "Patient_id",
                "is_payment",
                "email"
            ],
            "properties": {
            "patient_id":{
                "type": "string",
                "uniqueItems": false

            },
           
             "reg_amount":{
                "type": "string",
                "uniqueItems": false

             },
             "email": {
                "type": "string",
                "uniqueItems": false

             },
        
             "password":{
                "type": "string",
                "uniqueItems": false

             },
             "prepaid_talktime":{
                "type": "string",
                "uniqueItems": false
            },
             "status":{
               "type": "string",
               "uniqueItems": false

             }, 
             "date": {
                "type": "string",
                "uniqueItems": false
            },
            "username":{
              "type": "string",
               "required": true,
               "unique": false
            },
             "is_payment":{
                "type": "boolean",
                "uniqueItems": false
             }
            }
        },
        "getuser":{
            "required": [   ],
            "properties": {
                  "profile_id": {
                       "type": "string",
                       "uniqueItems": false
                    },
                    "alies_id": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "email": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "speciality": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "first_name": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "last_name": {
                        "type": "string",
                        "uniqueItems": false
                    }
               }
             },
             "givefeedback":{
                "required": [
         
                ],

                "properties":{
                    "comment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                      },
                    "rating":{
                        "type": "number",
                        "uniqueItems": false
                    },
                    "patient_id":{
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "doctor_id":{
                        "type": "array",
                    "items": {
                        "type": "object"
                    }
                    },
                    "patient_infos":{
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "uniqueItems": true
                    }
                }

             },
             "VideoLogin": {
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "password": {
                        "type": "string",
                        "uniqueItems": false
                    }
                }
            },
             "Vprepaid": {
                "required": [
                    "_id"
                ],
                "properties": {
                    "_id": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "manage_for": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "paid_amount_data": {
                        "type": "string",
                        "uniqueItems": false
                    },
                    "prepaid_min": {
                        "type": "string",
                        "uniqueItems": false
                    }
                    
                }
            },
        "user": {
            "required": [
             
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "first_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "last_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "phone": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "SelectDocforSickleave2":{
            "required": [
             
            ],
            "properties": {
                
                "approved_date": {
                    "type": "date",
                    "uniqueItems": false
                },
                "doctor_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }

        },
      
        "DoctorMail":{
            "required": [
             "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "uniqueItems": false
                },
                "first_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "last_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "profile_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "start": {
                    "type": "string",
                    "uniqueItems": false
                },
                "end": {
                    "type": "string",
                    "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
            

        },
        "approvedrequest":{
            "required": [
             
            ],
            "properties": {
                "for_manage": {
                    "type": "string",
                    "uniqueItems": false
                },
                "task_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                },
                "start": {
                    "type": "string",
                    "uniqueItems": false
                },
                "end": {
                    "type": "string",
                    "uniqueItems": false
                },
                "email": {
                    "type": "string",
                    "uniqueItems": false
                }
            }

        },
        
        "AddtheGroup": {
            "required": [
                "group_name"
            ],
            "properties": {
                "group_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "houses": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": false
                }
            }
        },
        "Team_Group":{
            "required": [
                "house_id"
            ],
            "properties": {
                "team_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "speciality_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "ward_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "staff": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": false
                }
            }
        },
        "AssignedHouse": {
            "required": [
                "label",
                "value",
                "group_name"
            ],
            "properties": {
                "label": {
                    "type": "string",
                    "uniqueItems": false
                },
                "value": {
                    "type": "string",
                    "uniqueItems": false
                },
                "group_name": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Institute": {
            "required": [
                "institute_name"
            ],
            "properties": {
                "institute_name": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Addstep": {
            "required": [
                "house_id"
            ],
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "Addmeeting": {
           
            "properties": {
                "patient_profile_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "doctor_profile_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "doctor_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "start_time": {
                    "type": "string",
                    "uniqueItems": false
                },
                "end_time": {
                    "type": "string",
                    "uniqueItems": false
                },
                "date": {
                    "type": "string",
                    "uniqueItems": false
                },
                "sesion_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "link": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "StepAddCase": {
            "required": [
                "case_id"
            ],
            "properties": {
                "case_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "AddQuestionaire": {
            "required": [
                "question",
                "house_id",
                "house_name"
            ],
            "properties": {
                "question": {
                    "type": "string",
                    "uniqueItems": false
                },
                "options": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_name": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
       
        "AddSpecialty": {
            "required": [
                "specialty_name",
                "house_id"
            ],
            "properties": {
                "specialty_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "color": {
                    "type": "string",
                    "uniqueItems": false
                },
                "background_color": {
                    "type": "string",
                    "uniqueItems": false
                },
                "wards": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "AddTask": {
            "required": [
                "task_name",
                "house_id",
                "status"
            ],
            "properties": {
                "task_name": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "status": {
                    "type": "string",
                    "uniqueItems": false
                },
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "case_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "archived": {
                    "type": "boolean",
                    "uniqueItems": false
                },
                "priority": {
                    "type": "number",
                    "uniqueItems": false
                },
                "created_at": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "ProfessionalTaskComment": {
            "required": [],
            "properties": {
                "text": {
                    "type": "string",
                    "uniqueItems": false
                },
                "comment_by": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "AddService": {
            "required": [
                "title",
                "house_id"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "uniqueItems": false
                },
                "description": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "speciality_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "AddInvoice": {
            "required": [
                "title",
                "house_id"
            ],
            "properties": {
                "invoice_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "description": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "speciality_id": {
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "checkPatient": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "pin": {
                    "type": "string",
                    "uniqueItems": false
                },
                "institute_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "email":{
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "checkPatient1": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "pin": {
                    "type": "string",
                    "uniqueItems": false
                },
                "birthday": {
                    "type": "string",
                    "uniqueItems": false
                },
                "email":{
                    "type": "string",
                    "uniqueItems": false
                },"first_name":{
                    "type": "string",
                    "uniqueItems": false
                },"last_name":{
                    "type": "string",
                    "uniqueItems": false
                }
            }
        },
        "addPatientToVH": {
            "required": [],
            "properties": {
                "case_number": {
                    "type": "string",
                    "uniqueItems": false
                },
                "patient": {
                    "type": "object",
                    "uniqueItems": false
                },
                "inhospital": {
                    "type": "boolean",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "AddRoom": {
            "required": [
                "case_number",
                "house_id"
            ],
            "properties": {
                "case_number": {
                    "type": "string",
                    "uniqueItems": false
                },
                "speciality": {
                    "type": "object",
                    "uniqueItems": false
                },
                "patient": {
                    "type": "object",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "wards": {
                    "type": "object",
                    "uniqueItems": true
                },
                "room": {
                    "type": "object",
                    "uniqueItems": true
                },
                "bed": {
                    "type": "string",
                    "uniqueItems": true
                },
                "inhospital": {
                    "type": "boolean",
                    "uniqueItems": true
                }
            }
        },
        "Checkward": {
            "required": [
            ],
            "properties": {
                "ward_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "specialty_id": {
                    "type": "string",
                    "uniqueItems": false
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "download": {
            "required": [],
            "properties": {
                "choice": {
                    "type": "string",
                    "uniqueItems": true
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "invoice_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "patient": {
                    "type": "object",
                    "uniqueItems": true
                },
                "case_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "status": {
                    "type": "object",
                    "uniqueItems": true
                },
                "total_amount": {
                    "type": "string",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "created_at": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "search": {
            "required": [],
            "properties": {
                "institute_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "type": {
                    "type": "string",
                    "uniqueItems": true
                },
                "search": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "filtertask": {
            "required": [],
            "properties": {
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "ward_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "room_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "assigned_to": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                },
                "speciality_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "patient_id": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Calenderfilter": {
            "required": [],
            "properties": {
                "filter": {
                    "type": "string",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "ward_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "room_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                },
                "speciality_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "patient_id": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                }
            }
        },
        "AddTrack": {
            "required": [],
            "properties": {
                "UserId": {
                    "type": "string",
                    "uniqueItems": true
                },
                "TrackId": {
                    "type": "string",
                    "uniqueItems": true
                }
                
            }
        },
        "Billfilter": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                },
                "speciality": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "uniqueItems": true
                }
            }
        },
        "PatientInfo": {
            "required": [],
            "properties": {
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "patient_id": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "adminhostipal": {
            "required": [],
            "properties": {
                "institue_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "type": {
                    "type": "string",
                    "uniqueItems": true
                },
                "search": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "download2": {
            "required": [],
            "properties": {
                "choice": {
                    "type": "string",
                    "uniqueItems": true
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "invoice_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "patient": {
                    "type": "object",
                    "uniqueItems": true
                },
                "case_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "status": {
                    "type": "object",
                    "uniqueItems": true
                },
                "total_amount": {
                    "type": "string",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "created_at": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "deletehouse": {
            "required": [],
            "properties": {
                "house_id": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "info1": {
            "required": [],
            "properties": {
                "patient_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "house_id": {
                    "type": "string",
                    "uniqueItems": true
                }
               
            }
        }
    }
}
